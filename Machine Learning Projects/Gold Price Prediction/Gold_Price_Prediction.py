# -*- coding: utf-8 -*-
"""WEMLProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iXRYG_UjvFKwcgap6tJ9sWvwzXbwpkue

1) Import the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

"""2) Data collection and processing"""

gold_data = pd.read_csv('/content/gld_price_data.csv')

gold_data.head()

gold_data.tail()

gold_data.shape

gold_data.info()

gold_data.describe()

"""3) Analysis of data"""

correlation = gold_data.corr()
plt.figure(figsize = (8,8))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

print(correlation['GLD'])

sns.distplot(gold_data['GLD'],color='orange')

"""4) Splitting the data to test and train"""

X = gold_data.drop(['Date','GLD'],axis=1)
Y = gold_data['GLD']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

"""5) Model training"""

regressor = RandomForestRegressor(n_estimators=100)

regressor.fit(X_train,Y_train)

"""6) Model evaluation"""

test_data_prediction = regressor.predict(X_test)

print(test_data_prediction)

error_score = metrics.r2_score(Y_test,test_data_prediction)

print("R squared error : " , error_score)

Y_test = list(Y_test)

plt.plot(Y_test, color='green', label='Actual Value')
plt.plot(test_data_prediction, color='red', label='Predicted Value')
plt.title('Actual price vs Predicted price')
plt.xlabel('Number of values')
plt.ylabel('Gold Price')
plt.legend()
plt.show()